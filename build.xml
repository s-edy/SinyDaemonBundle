<?xml version="1.0" encoding="UTF-8"?>
<project name="SinyDaemonBundle" default="build" basedir=".">
	<property name="source" value="${basedir}/Process" />
	<target name="composer" description="Install by composer.phar">
		<exec executable="wget">
			<arg value="http://getcomposer.org/installer" />
		</exec>
		<exec executable="php">
			<arg value="installer" />
		</exec>
		<exec executable="php">
			<arg value="composer.phar" />
			<arg value="install" />
		</exec>
	</target>
	<target name="clean" description="Clean up and create artifact directories">
		<delete dir="${basedir}/build/api" />
		<delete dir="${basedir}/build/code-browser" />
		<delete dir="${basedir}/build/coverage" />
		<delete dir="${basedir}/build/logs" />
		<delete dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/build/api" />
		<mkdir dir="${basedir}/build/code-browser" />
		<mkdir dir="${basedir}/build/coverage" />
		<mkdir dir="${basedir}/build/logs" />
		<mkdir dir="${basedir}/build/pdepend" />
	</target>
	<target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
		<exec executable="phpunit" failonerror="true">
			<arg value="--configuration" />
			<arg value="${basedir}/phpunit.xml.jenkins" />
			<arg value="--log-junit" />
			<arg value="${basedir}/build/logs/junit.xml" />
			<arg value="--coverage-clover" />
			<arg value="${basedir}/build/logs/clover.xml" />
		</exec>
	</target>
	<target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${source}" />
		</exec>
	</target>
	<target name="phpmd" description="Generate pmd.xml using PHPMD">
		<exec executable="phpmd">
			<arg value="${source}" />
			<arg value="xml" />
			<arg value="codesize,design,naming,unusedcode" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>
	<target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
		<exec executable="phpcpd">
			<arg value="--log-pmd" />
			<arg value="${basedir}/build/logs/pmd-cpd.xml" />
			<arg value="${source}" />
		</exec>
	</target>
	<target name="phploc" description="Generate phploc.csv">
		<exec executable="phploc">
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg value="${source}" />
		</exec>
	</target>
	<target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=Symfony2" />
			<arg value="${source}" />
		</exec>
	</target>
	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox" />
	</target>
	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--log" />
			<arg value="${basedir}/build/logs" />
			<arg value="--source" />
			<arg value="${source}" />
			<arg value="--output" />
			<arg value="${basedir}/build/code-browser" />
		</exec>
	</target>
	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="4">
			<antcall target="pdepend" />
			<antcall target="phpcpd" />
			<antcall target="phpcs" />
			<antcall target="phpdox" />
			<antcall target="phploc" />
			<sequential>
				<antcall target="phpmd" />
				<antcall target="phpcb" />
			</sequential>
		</parallel>
	</target>
	<target name="build" depends="clean,tools-parallel,composer,phpunit" />
</project>
